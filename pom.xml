<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com</groupId>
  <artifactId>MantiMetrics</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>Manti Metrics</name>

  <properties>
    <!-- Compiler -->
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>

    <!-- Core library overrides -->
    <commons.codec.version>1.15</commons.codec.version>             <!-- latest Commons‑Codec 1.x release -->
    <commons.io.version>2.19.0</commons.io.version>                  <!-- latest Commons‑IO 2.x release -->
    <guava.version>32.1.2-jre</guava.version>                        <!-- Guava 32.1.2‑jre released Aug 2023 -->
    <okio.version>3.11.0</okio.version>                              <!-- Okio recommends 3.11.0 over 3.4.0 -->
    <log4j2.version>2.20.0</log4j2.version>                          <!-- Log4j 2.20.0 is the latest stable -->

    <!-- Safe versions for override -->
    <groovy.version>2.4.21</groovy.version>
    <plexus.utils.version>3.0.24</plexus.utils.version>
    <maven.core.version>3.8.8</maven.core.version>
  </properties>

  <dependencies>
    <!-- Groovy, but without the old SLF4J→Log4j1 bridge -->
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>${groovy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Force Plexus-Utils ≥ 3.0.16 -->
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>${plexus.utils.version}</version>
    </dependency>

    <!-- Force Maven-Core 3.8.8 -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${maven.core.version}</version>
    </dependency>

    <!-- Log4j2 core + bridge Log4j‑1.2 API -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-1.2-api</artifactId>
      <version>${log4j2.version}</version>
    </dependency>

    <!-- Force safe Commons‑Codec -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons.codec.version}</version>
    </dependency>

    <!-- Force safe Commons‑IO -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io.version}</version>
    </dependency>

    <!-- Force safe Guava -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <!-- Force safe Okio -->
    <dependency>
      <groupId>com.squareup.okio</groupId>
      <artifactId>okio</artifactId>
      <version>${okio.version}</version>
    </dependency>

    <!-- Log4j2 binding for SLF4J -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j2.version}</version>
    </dependency>

    <!-- Log4j2 API -->
    <dependency>
      <groupId>org.fusesource.jansi</groupId>
      <artifactId>jansi</artifactId>
      <version>2.4.0</version>
    </dependency>

    <!-- JGit (you already excluded slf4j-log4j12 here) -->
    <dependency>
      <groupId>org.eclipse.jgit</groupId>
      <artifactId>org.eclipse.jgit</artifactId>
      <version>6.6.1.202309021850-r</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- JavaParser for AST parsing -->
    <dependency>
      <groupId>com.github.javaparser</groupId>
      <artifactId>javaparser-core</artifactId>
      <version>3.25.4</version>
    </dependency>

    <!-- Apache HttpClient for JIRA REST -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.14</version>
    </dependency>

    <!-- OpenCSV for CSV writing -->
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>5.7.1</version>
    </dependency>

    <!-- (Optional) CK for complexity metrics -->
    <dependency>
      <groupId>com.github.mauricioaniche</groupId>
      <artifactId>ck</artifactId>
      <version>0.7.0</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Jackson for JSON parsing (JIRA) -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.15.2</version>
    </dependency>

    <!-- JUnit for testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.10.0</version>
      <scope>test</scope>
    </dependency>

    <!-- OkHttp3 for HTTP calls to GitHub API -->
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>4.11.0</version>
    </dependency>

    <!-- If any plugin carries maven-core:2.0.9, exclude it -->
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-clean-plugin</artifactId>
      <version>3.2.0</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- PMD core -->
    <dependency>
      <groupId>net.sourceforge.pmd</groupId>
      <artifactId>pmd-core</artifactId>
      <version>7.10.0</version>
    </dependency>

    <!-- PMD Java engine -->
    <dependency>
      <groupId>net.sourceforge.pmd</groupId>
      <artifactId>pmd-java</artifactId>
      <version>7.3.0</version>
      <exclusions>
        <exclusion>              <!-- deactivates the internal logger -->
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- SonarQube Scanner -->
    <dependency>
      <groupId>org.sonarsource.scanner.cli</groupId>
      <artifactId>sonar-scanner-cli</artifactId>
      <version>5.0.1.3006</version>   <!-- latest LTS scanner -->
      <scope>runtime</scope>          <!-- we only fork it -->
    </dependency>

    <!-- SonarQube Java plugin -->
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs</artifactId>
      <version>4.9.3</version>
    </dependency>

    <!-- SpotBugs annotations -->
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>2.16.1</version>
    </dependency>

    <!-- SpotBugs annotations -->
    <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.17.0</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!-- Maven Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <!-- Maven Surefire Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

        <!-- Maven Assembly Plugin -->
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>4.9.3.0</version>
        <configuration>
          <!-- Produces the report in XML format -->
          <xmlOutput>true</xmlOutput>
          <!-- XML output directory -->
          <xmlOutputDirectory>${project.build.directory}/spotbugs</xmlOutputDirectory>
          <!-- Lower threshold to include low-priority bugs -->
          <threshold>Low</threshold>
          <!-- Maximum analysis effort -->
          <effort>Max</effort>
        </configuration>
        <executions>
          <execution>
            <goals>
              <!-- goal generating report -->
              <goal>spotbugs</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>